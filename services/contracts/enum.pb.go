// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contracts/enum.proto

package contracts

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_EventNone EventType = 0
	EventType_In        EventType = 1
	EventType_Out       EventType = 2
	EventType_Play      EventType = 3
)

var EventType_name = map[int32]string{
	0: "EventNone",
	1: "In",
	2: "Out",
	3: "Play",
}

var EventType_value = map[string]int32{
	"EventNone": 0,
	"In":        1,
	"Out":       2,
	"Play":      3,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67f9a48cc0dd671e, []int{0}
}

type GroupStatus int32

const (
	GroupStatus_GroupNone GroupStatus = 0
	GroupStatus_Forming   GroupStatus = 1
	GroupStatus_Formed    GroupStatus = 2
	GroupStatus_Closed    GroupStatus = 3
)

var GroupStatus_name = map[int32]string{
	0: "GroupNone",
	1: "Forming",
	2: "Formed",
	3: "Closed",
}

var GroupStatus_value = map[string]int32{
	"GroupNone": 0,
	"Forming":   1,
	"Formed":    2,
	"Closed":    3,
}

func (x GroupStatus) String() string {
	return proto.EnumName(GroupStatus_name, int32(x))
}

func (GroupStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67f9a48cc0dd671e, []int{1}
}

func init() {
	proto.RegisterEnum("contracts.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("contracts.GroupStatus", GroupStatus_name, GroupStatus_value)
}

func init() { proto.RegisterFile("contracts/enum.proto", fileDescriptor_67f9a48cc0dd671e) }

var fileDescriptor_67f9a48cc0dd671e = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x49, 0xce, 0xcf, 0x2b,
	0x29, 0x4a, 0x4c, 0x2e, 0x29, 0xd6, 0x4f, 0xcd, 0x2b, 0xcd, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x84, 0x8b, 0x6a, 0x99, 0x72, 0x71, 0xba, 0x96, 0xa5, 0xe6, 0x95, 0x84, 0x54, 0x16,
	0xa4, 0x0a, 0xf1, 0x42, 0x39, 0x7e, 0xf9, 0x79, 0xa9, 0x02, 0x0c, 0x42, 0x6c, 0x5c, 0x4c, 0x9e,
	0x79, 0x02, 0x8c, 0x42, 0xec, 0x5c, 0xcc, 0xfe, 0xa5, 0x25, 0x02, 0x4c, 0x42, 0x1c, 0x5c, 0x2c,
	0x01, 0x39, 0x89, 0x95, 0x02, 0xcc, 0x5a, 0x8e, 0x5c, 0xdc, 0xee, 0x45, 0xf9, 0xa5, 0x05, 0xc1,
	0x25, 0x89, 0x25, 0xa5, 0xc5, 0x20, 0x8d, 0x60, 0x2e, 0x54, 0x23, 0x37, 0x17, 0xbb, 0x5b, 0x7e,
	0x51, 0x6e, 0x66, 0x5e, 0xba, 0x00, 0xa3, 0x10, 0x17, 0x17, 0x1b, 0x88, 0x93, 0x9a, 0x22, 0xc0,
	0x04, 0x62, 0x3b, 0xe7, 0xe4, 0x17, 0xa7, 0xa6, 0x08, 0x30, 0x27, 0xb1, 0x81, 0xdd, 0x62, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x03, 0x2d, 0x08, 0x0c, 0xa3, 0x00, 0x00, 0x00,
}
