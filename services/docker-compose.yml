version: '3'
services:
  redis_db:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://kafka:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "player:2:1"
      KAFKA_BROKER_ID: 1
  mongo:
    image: mongo
    volumes:
      - /data/db:/data/db
    ports:
      - 27017:27017

  oauth_svc:
    build:
      context: .
      dockerfile: oauth.Dockerfile
    ports:
      - "8440:80"
    environment:
      - PORT=80
      - JWT_KEY=00000000
  game_svc:
    build:
      context: .
      dockerfile: game_svc.Dockerfile
    ports:
      - "8441:80"
    depends_on:
      - kafka
    environment:
      - PORT=80
      - KAFKA_BROKERS=kafka:9092
      - BROKER_RPC=broker_svc:90
      - REDIS_SERVER=redis_db:6379
  broker_svc:
    build:
      context: .
      dockerfile: broker_svc.Dockerfile
    environment:
      - REDIS_SERVER=redis_db:6379
      - KAFKA_BROKERS=kafka:9092
      - WEB_PORT=80
      - RPC_PORT=90
    ports:
      - "8543:90"
    
  admin_svc:
    build:
        context: .
        dockerfile: admin_svc.Dockerfile
    ports: 
      - "8451:80"
    environment:
      - PORT=80
      - REDIS_SERVER=redis_db:6379
      - GAME_URL=http://game_svc:80
      - OAUTH_URL=http://oauth_svc:80